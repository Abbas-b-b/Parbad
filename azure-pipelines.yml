trigger:
  batch: true
  branches:
    include:
    - master
    - dev

pool:
  vmImage: 'windows-latest'

variables:
  buildConfiguration: 'release'

stages:
  - stage: Development
    condition: eq(variables['build.sourceBranch'], 'refs/heads/dev')
    jobs:
    - job: Initializing
      steps:
      - task: DotNetCoreCLI@2
        displayName: 'restoring'
        inputs:
          command: 'restore'
          projects: '**/*.csproj'
      - task: DotNetCoreCLI@2
        displayName: 'building'
        inputs:
          command: 'build'
          projects: 'src/**/*.csproj'
          arguments: '-c $(buildConfiguration)'
      - task: DotNetCoreCLI@2
        displayName: 'packing'
        inputs:
          command: 'custom'
          projects: 'src/**/*.csproj'
          custom: 'pack'
          arguments: '-c $(buildConfiguration) --no-build -o $(Build.ArtifactStagingDirectory)/packages/prereleases --version-suffix dev$(Build.BuildNumber)'
      - task: NuGetCommand@2
        displayName: 'pushing'
        inputs:
          command: 'push'
          packagesToPush: '$(Build.ArtifactStagingDirectory)/packages/prereleases/*.nupkg;!$(Build.ArtifactStagingDirectory)/packages/prereleases/*.symbols.nupkg'
          nuGetFeedType: 'internal'
          publishVstsFeed: '279df34c-5022-41d4-b4c9-079b9ee673d2/079abce9-be4c-41d8-8897-5fcf6b8465d0'
          allowPackageConflicts: true
  - stage: Production
    condition: eq(variables['build.sourceBranch'], 'refs/heads/master')
    jobs:
    - job: Initializing
      steps:
      - task: DotNetCoreCLI@2
        displayName: 'restoring'
        inputs:
          command: 'restore'
          projects: '**/*.csproj'
      - task: DotNetCoreCLI@2
        displayName: 'building'
        inputs:
          command: 'build'
          projects: 'src/**/*.csproj'
          arguments: '-c $(buildConfiguration)'
      - task: DotNetCoreCLI@2
        displayName: 'packing'
        inputs:
          command: 'custom'
          projects: 'src/**/*.csproj'
          custom: 'pack'
          arguments: '-c $(buildConfiguration) --no-build -o $(Build.ArtifactStagingDirectory)/packages/releases'
      - task: NuGetCommand@2
        displayName: 'pushing'
        inputs:
          command: 'push'
          packagesToPush: '$(Build.ArtifactStagingDirectory)/packages/releases/*.nupkg;!$(Build.ArtifactStagingDirectory)/packages/releases/*.symbols.nupkg'
          nuGetFeedType: 'internal'
          publishVstsFeed: '279df34c-5022-41d4-b4c9-079b9ee673d2/079abce9-be4c-41d8-8897-5fcf6b8465d0'
          allowPackageConflicts: true
      - task: NuGetCommand@2
        inputs:
          command: 'push'
          packagesToPush: '$(Build.ArtifactStagingDirectory)/packages/releases/*.nupkg;!$(Build.ArtifactStagingDirectory)/packages/releases/*.symbols.nupkg'
          nuGetFeedType: 'external'
          publishFeedCredentials: 'Nuget'