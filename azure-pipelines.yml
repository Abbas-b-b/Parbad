trigger:
  batch: true
  branches:
    include:
    - master
    - dev

pool:
  vmImage: 'windows-latest'

variables:
  buildConfiguration: 'release'
  projects: 'src/**/*.csproj'

stages:
  - stage: Preparing
    jobs:
    - job: Initializing
      steps:
      - task: DotNetCoreCLI@2
        displayName: 'restoring'
        inputs:
          command: 'restore'
          projects: '**/*.csproj'
      - task: DotNetCoreCLI@2
        displayName: 'building'
        inputs:
          command: 'build'
          projects: $(projects)
          arguments: '-c $(buildConfiguration)'
    - job: Development
      condition: eq(variables['build.sourceBranch'], 'refs/heads/dev')
      steps:
      - task: DotNetCoreCLI@2
        displayName: 'packing'
        inputs:
          command: 'custom'
          projects: $(projects)
          custom: 'pack'
          arguments: '-c $(buildConfiguration) --no-build -o $(Build.ArtifactStagingDirectory) --version-suffix dev$(Build.BuildNumber)'
      - script: $ArtifactName = prerelease
    - job: Initializing
      condition: eq(variables['build.sourceBranch'], 'refs/heads/dev')
      steps:
      - task: DotNetCoreCLI@2
        displayName: 'packing'
        inputs:
          command: 'custom'
          projects: $(projects)
          custom: 'pack'
          arguments: '-c $(buildConfiguration) --no-build -o $(Build.ArtifactStagingDirectory)'
      - script: $ArtifactName = release
    - job: Publish
      steps:
      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: '$(Build.ArtifactStagingDirectory)'
          ArtifactName: '$(ArtifactName)'
          publishLocation: 'Container'
          